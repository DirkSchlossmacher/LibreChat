# This configuration is for a production deployment with a custom domain.
# It serves the static frontend via HTTPS and acts as a reverse proxy for the API.
# It also includes a redirect for all HTTP traffic to HTTPS.

# HTTP server block to redirect all traffic to HTTPS
server {
    # Listen on standard HTTP port
    listen 80;
    listen [::]:80;

    ########################################  Non-SSL  ########################################
    server_name librechat.loop.ai.in;

    # Increase the client_max_body_size to allow larger file uploads
    client_max_body_size 25M;

    location /api/ {
        proxy_pass http://api:3080/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Redirect all HTTP requests to HTTPS, which is a security best practice.
    location / {
        return 301 https://$host$request_uri;
    }
}

# SSL/HTTPS server block
server {
    # Listen on standard HTTPS port
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name librechat.loop.ai.in;

    # Set the root to the client's built frontend directory
    root /usr/share/nginx/html;
    index index.html index.htm;
    client_max_body_size 25M;

    # SSL configuration from Mozilla SSL Configuration Generator
    # Corrected file paths for Certbot-generated certificates, assuming
    # the volume mount from deploy-compose.yml is enabled.
    ssl_certificate /etc/nginx/ssl/live/librechat.loop.ai.in/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/librechat.loop.ai.in/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;
    ssl_session_tickets off;
    ssl_dhparam /etc/nginx/ssl/dhparam;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
    ssl_prefer_server_ciphers off;
    add_header Strict-Transport-Security "max-age=63072000" always;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 127.0.0.1;

    # This location block serves all static frontend files.
    # It tries to find a file that matches the URL, otherwise, it serves index.html for client-side routing.
    location / {
        try_files $uri $uri/ /index.html;
    }

    # This location block proxies all requests for /api/ to the backend container.
    location /api/ {
        # 'api' is the service name from deploy-compose.yml
        proxy_pass http://api:3080/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
